/*!
 * my-online-portfolio
 * Ahmad Milzam - Frontend Web Architect and Developer
 * https://github.com/ahmadmilzam/csskit
 * @author Ahmad Milzam <email@ahmadmilzam.com>
 * @version 0.0.1
 * Copyright . MIT licensed.
 * 2015-01-16
 */

@charset "UTF-8";
/* Generated by Font Squirrel (http://www.fontsquirrel.com) on October 9, 2014 */
@font-face {
  font-family: 'proxima_nova';
  src: url("../fonts/typograph/proximanova-bold-webfont.eot");
  src: url("../fonts/typograph/proximanova-bold-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/typograph/proximanova-bold-webfont.woff") format("woff"), url("../fonts/typograph/proximanova-bold-webfont.ttf") format("truetype"), url("../fonts/typograph/proximanova-bold-webfont.svg#proxima_nova_rgbold") format("svg");
  font-weight: bold;
  font-style: normal;
}
@font-face {
  font-family: 'proxima_nova';
  src: url("../fonts/typograph/proximanova-regular-webfont.eot");
  src: url("../fonts/typograph/proximanova-regular-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/typograph/proximanova-regular-webfont.woff") format("woff"), url("../fonts/typograph/proximanova-regular-webfont.ttf") format("truetype"), url("../fonts/typograph/proximanova-regular-webfont.svg#proxima_nova_rgregular") format("svg");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'proxima_nova';
  src: url("../fonts/typograph/proximanova-regularitalic-webfont.eot");
  src: url("../fonts/typograph/proximanova-regularitalic-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/typograph/proximanova-regularitalic-webfont.woff") format("woff"), url("../fonts/typograph/proximanova-regularitalic-webfont.ttf") format("truetype"), url("../fonts/typograph/proximanova-regularitalic-webfont.svg#proxima_novaregular_italic") format("svg");
  font-weight: normal;
  font-style: italic;
}
/**
 * I use these as default colors throughout
 * Ref: http://www.flatuicolorpicker.com/
 */
/* ==========================================================================
   Framework Main File
   ========================================================================== */
/**
 * YOU SHOULD PREDEFINE THE VARIABLES BEFORE IMPORT THE RELEVANT FILES
 */
/*
   SETTINGS
   ========================================================================== */
/**
 * Global variables, site-wide settings, config switches, etc.
 *
 * These variables are framework variables, sourced from variables defined
 * above. Feel free to use these variables throughout your project, but do not
 * modify or reassign them.
 */
/**
 * Hold our breakpoint range and conditions.
 *
 * These can be invoked later on using this line of code:
 *
 * @media conditions{
 *   @content;
 * }
 */
/**
 * Would you like classes to be prepended with a namespace? If so,
 * define it here.
 */
/* ==========================================================================
   DEFAULTS
   ========================================================================== */
/**
 * THESE VARIABLES ARE DEFAULT; DO NOT MODIFY OR ADJUST THE VARIABLES DIRECTLY.
 * YOU SHOULD PREDEFINE THE VARIABLES IN
 * YOUR OWN MAIN FILES BEFORE INCLUDE THIS FILE.
 */
/*
   High-level base settings.
   ========================================================================== */
/**
 * These variables are framework variables, sourced from variables defined
 * above. Feel free to use these variables throughout your project, but do not
 * modify or reassign them.
 */
/*
   SETTINGS-BREAKPOINTS
   ========================================================================== */
/**
 * Hold our breakpoint range and conditions.
 *
 * These can be invoked later on using this line of code:
 *
 * @media conditions{
 *   @content;
 * }
 *
 * Using Relative Units for Widths
 *
 * You may have noticed that we use em for
 * our default CSS Media Query widths instead of px.
 * This was a conscious decision since it
 * allows the Media Queries to respond appropriately
 * when people zoom the webpage.
 * Check out this article by Brad Frost
 * http://bradfrostweb.com/blog/post/7-habits-of-highly-effective-media-queries/#relative
 * for some background information on using relative units
 * within Media Queries.
 */
/*
   Debuger
   ========================================================================== */
/*
   Namespace.
   ========================================================================== */
/**
 * Would you like classes to be prepended with a namespace? If so,
 * define it here.
 */
/**
 * If we have included this file, set a variable to tell the rest of the
 * framework that we have some base settings.
 */
/*
   TOOLS
   ========================================================================== */
/* ==========================================================================
   FUNCTIONS
   ========================================================================== */
/*
   Strip Unit
   ========================================================================== */
/*
   CONVERT TO REM
   ========================================================================== */
/*
   Rem calc
   ========================================================================== */
/**
 * New Syntax, allows to optionally calculate on a different base value to counter compounding effect of rem's.
 * Call with 1, 2, 3 or 4 parameters, 'px' is not required but supported:
 * rem-calc(10 20 30px 40);
 * Space delimited, if you want to delimit using comma's, wrap it in another pair of brackets
 *
 *  rem-calc((10, 20, 30, 40px));
 *
 * Optionally call with a different base (eg: 8px) to calculate rem.
 *
 *  rem-calc(16px 32px 48px, 8px);
 *
 * If you require to comma separate your list
 *
 *  rem-calc((16px, 32px, 48), 8px);
 *
 *
 */
/*
   Math Helpers.
   ========================================================================== */
/**
 * Half and double numbers, returning rounded integers. E.g.:
 * .foo{
 *  padding: halve(30px)
 * }
 */
/* ==========================================================================
   Grid Mixin, create complex layout ON DEMAND!
   ========================================================================== */
/**
 * In a world of agile development and
 * super-tablet-multi-magic-laptop-phones,
 * the best layouts can't be contained in a
 * single framework or technique.
 * CSS Libraries are a bloated mess of opinions about how to do your job.
 * Why let the table-saw tell you where to put the kitchen?
 * If we can create them ourself?
 */
/*
   Grid Functions
   ========================================================================== */
/*
   Grid Row
   ========================================================================== */
/**
 * For creating container, nested, and flushed rows
 * @param:
 *
 * $max-width, Given max-width value for the container. Default: $container-width.
 * $behavior - Any special behavior for this row? Default: false. Options: nest, flush, nest-flush, false.
 */
/* close grid-row */
/*
   Grid Column
   ========================================================================== */
/**
 * Creates a column, should be used inside of a media query to control layouts
 *
 * @params:
 *
 * $columns - The number of columns this should be
 * $total-columns - The number of total columns
 * $last-column - Is this the last column? Default: false.
 * $center - Center these columns? Default: false.
 * $offset - # of columns to offset. Default: false.
 * $push - # of columns to push. Default: false.
 * $pull - # of columns to pull. Default: false.
 * $flush - Get rid of gutter padding on column? Default: false.
 * $float - Should this float? Default: true. Options: true, false, left, right.
 * $position - relative position, push and pull require position set. Default: false.
 */
/* close grid-column */
/*
   How To Use
   ========================================================================== */
/**
 * Mobile First Example
 *
 * .container{
 *   @include grid-row;
 * }
 *
 * .aside{
 *   @media condition{
 *     @include grid-column(4);
 *   }
 * }
 *
 * .content{
 *   @media condition{
 *     @include grid-column(8, $last:true);
 *   }
 * }
 */
/*
   Font Size Mixin
   ========================================================================== */
/*
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 *
 * .foo {
 *   @include font-size(12px);
 * }
 *
 * This will generate a rem-based font-size as well as
 * a unitless line-height which will place the element on your baseline, e.g.:
 *
 * .foo {
 *   font-size: 0.75rem;
 *   line-height: 2;
 * }
 *
 * If you do not want csskit to generate you a line-height automatically, you
 * simply pass in your own as a second paramater:
 *
 * .foo {
 *   @include font-size(12px, 1.5);
 * }
 *
 * This will yield:
 *
 * .foo {
 *   font-size: 0.75rem;
 *   line-height: 1.5;
 * }
 *
 * This parameter can be any integer, 'inherit', or 'normal'. If you don't want
 * a line-height at all, pass in a second paramater of 'none' or 'false':
 *
 * .foo {
 *   @include font-size(12px, none);
 * }
 *
 * This will yield:
 * .foo {
 *   font-size: 12px;
 *   font-size: 0.75rem;
 * }
 */
/**
 * Usage
 *
  $dark-background-color: #333;
  $light-text-color: white;

  $light-background-color: #eee;
  $dark-text-color: black;

  .dark-background {
    background: $dark-background-color;
    color: contrasting-color($dark-background-color, $light-text-color, $dark-text-color);
  }

  .light-background {
    background: $light-background-color;
    color: contrasting-color($light-background-color, $light-text-color, $dark-text-color);
  }
  *
*/
/* ==========================================================================
   Tools Responsive
   ========================================================================== */
/*
   Ranges
   ========================================================================== */
/*
   Media Query Conditions
   ========================================================================== */
/*
   Box Sizing
   ========================================================================== */
/**
 * Border box mixin
 * @param   $type: border-box
 */
/*
   Clearfix hack by Nicolas Gallagher (https://github.com/necolas)
   ========================================================================== */
/**
 * We use this to do clear floats
 */
/* ==========================================================================
   Common css3 mixin
   ========================================================================== */
/*
   Double borders
   ========================================================================== */
/*
   Transform
   ========================================================================== */
/*
   Transition
   ========================================================================== */
/*
   Vertical Middle
   ========================================================================== */
/*
   Horizontal Middle
   ========================================================================== */
/*
   Border Radius
   ========================================================================== */
/* debug */
/*
   GENERIC
   ========================================================================== */
/**
 *  Low-specificity, far-reaching rulesets (e.g. CSS resets)
 *
 * [1] Normalize
 * [2] Reset
 * [3] Box Sizing
 * [4] Shared
 */
/* [1] */
/* ==========================================================================
   NORMALIZE.CSS by by Nicolas Gallagher (https://github.com/necolas)
   ========================================================================== */
/* normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/* [2] */
/* ==========================================================================
   RESET
   ========================================================================== */
/**
 * As well as using normalize.css, it is often advantageous to remove all
 * margins from certain elements.
 */
h1, h2, h3, h4, h5, h6,
p, pre, blockquote,
dl, dd, ol, ul,
form, fieldset, legend,
figure,
table, th, td, caption,
hr {
  margin: 0;
  padding: 0;
}

/**
 * Give a help cursor to elements that give extra info on `:hover`.
 */
abbr[title],
dfn[title] {
  cursor: help;
}

/**
 * Remove underlines from potentially troublesome elements.
 */
u,
ins {
  text-decoration: none;
}

/**
 * Apply faux underlines to inserted text via `border-bottom`.
 */
ins {
  border-bottom: 1px solid;
}

/* [3] */
/* ==========================================================================
   BOX-SIZING
   ========================================================================== */
/**
 * Set the global `box-sizing` state to `border-box`.
 *
 * css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice
 * paulirish.com/2012/box-sizing-border-box-ftw
 */
html {
  box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: border-box;
}

/**
 * If we have included this file, set a variable to tell the rest of the
 * framework that global `box-sizing: border-box` has been set.
 */
/* [4] */
/*------------------------------------*\
    #SHARED
\*------------------------------------*/
/**
 * Where `margin-bottom` is concerned,this value will be the same as the
 * base line-height. This allows us to keep a consistent vertical rhythm.
 * As per: csswizardry.com/2012/06/single-direction-margin-declarations
 */
h1, h2, h3, h4, h5, h6,
ul, ol, dl,
blockquote, p, address,
table,
fieldset, figure,
pre {
  margin-bottom: 1.5rem;
}

/**
 * Where `margin-left` is concerned we want to try and indent certain elements
 * by a consistent amount. Define that amount once,here.
 */
ul, ol, dd {
  margin-left: 1.5rem;
}

/*
   BASE
   ========================================================================== */
/**
 * Uncllassed HTML elements (eg. a{}, p{}, blockquote{} )
 *
 * [1] Page
 * [2] Headings
 * [3] Paragraphs
 * [4] Links
 * [5] Images
 * [6] List
 * [7] Hr
 * [8] Blockquote
 * [9] Forms
 * [10] Codes
 */
/* [1] */
/* ==========================================================================
   PAGE
   ========================================================================== */
/**
 * High, page-level styling.
 *
 * 1. Set the default `font-family`, `font-size` and `line-height` for the entire project,
 *    sourced from our default variables. The `font-size` is calculated to exist
 *    in ems, the `line-height` is calculated to exist unitlessly.
 * 2. Force scrollbars to always be visible to prevent awkward 'jumps' when
 *    navigating between pages that do/do not have enough content to produce
 *    scrollbars naturally.
 * 3. Ensure the page always fills at least the entire height of the viewport.
 * 4. Fonts on OSX will look more consistent with other systems that do not
 *    render text using sub-pixel anti-aliasing.
 */
html {
  font-family: "proxima_nova", "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-weight: normal;
  font-size: 1em;
  /* [1] */
  line-height: 1.5;
  /* [1] */
  background-color: #f9f9f9;
  color: #505050;
  overflow-y: scroll;
  /* [2] */
  min-height: 100%;
  /* [3] */
  -moz-osx-font-smoothing: grayscale;
  /* [4] */
  -webkit-font-smoothing: antialiased;
  /* [4] */
}

/* [2] */
/* ==========================================================================
   HEADINGS
   ========================================================================== */
/**
 * A modified version of heading-size mixin from
 * https://gist.github.com/lolmaus/7825675
 *
 * @param   $max-size:    $heading-size-max
 * @param   $min-size:    $heading-size-min
 * @param   $max-heading: 1
 * @param   $min-heading: 6
 * @param   $ratio:       $golden
 * @param   $debug:       false
 */
h1, h2, h3, h4, h5, h6 {
  text-rendering: optimizeLegibility;
  word-wrap: break-word;
}

h6,
.h6 {
  font-size: 1rem;
  line-height: 1.3;
}

h5,
.h5 {
  font-size: 1.0536rem;
  line-height: 1.3;
}

h4,
.h4,
.blockquote__header {
  font-size: 1.14032rem;
  line-height: 1.3;
}

h3,
.h3 {
  font-size: 1.28063rem;
  line-height: 1.3;
}

h2,
.h2 {
  font-size: 1.50767rem;
  line-height: 1.3;
}

h1,
.h1 {
  font-size: 1.875rem;
  line-height: 1.3;
}

@media only screen and (min-width: 64.063em) {
  h1, h2, h3, h4, h5, h6 {
    word-wrap: normal;
  }

  h6,
  .h6 {
    font-size: 1rem;
    line-height: 1.5;
  }

  h5,
  .h5 {
    font-size: 1.09954rem;
    line-height: 1.36421;
  }

  h4,
  .h4,
  .blockquote__header {
    font-size: 1.26059rem;
    line-height: 1.18992;
  }

  h3,
  .h3 {
    font-size: 1.52118rem;
    line-height: 1.97215;
  }

  h2,
  .h2 {
    font-size: 1.94281rem;
    line-height: 1.54416;
  }

  h1,
  .h1 {
    font-size: 2.625rem;
    line-height: 1.14286;
  }
}
h1, h2, h3, h4, h5, h6 {
  font-weight: 400;
}

/* [3] */
/* ==========================================================================
   PARAGRAPHS
   ========================================================================== */
/**
 * The `.lede` class is used to make the introductory text (usually a paragraph)
 * of a document slightly larger: en.wikipedia.org/wiki/Lede_(news)
 *
 * Predefine the variables below in order to alter and enable specific features.
 */
.lede,
.icon--lg {
  font-size: 1.25rem;
  line-height: 1.2;
}

/* [4] */
/* ==========================================================================
   LINKS
   ========================================================================== */
a {
  color: #446cb3;
  text-decoration: none;
  line-height: inherit;
  transition: color 0.3s ease-out 0s;
}
a:hover, a:focus {
  color: #6789c5;
}
a img {
  border: none;
}

/* [5] */
/* ==========================================================================
   IMAGES
   ========================================================================== */
/**
 * 1. Fluid images for responsive purposes.
 * 2. Offset `alt` text from surrounding copy.
 * 3. Setting `vertical-align` removes the whitespace that appears under `img`
 *    elements when they are dropped into a page as-is. Safer alternative to
 *    using `display: block;`.
 */
img {
  max-width: 100%;
  /* [1] */
  height: auto;
  /* [1] */
  font-style: italic;
  /* [2] */
  vertical-align: middle;
  /* [3] */
}

/**
 * 1. Google Maps breaks if `max-width: 100%` acts upon it; use their selector
 *    to remove the effects.
 * 2. If a `width` and/or `height` attribute have been explicitly defined, letΓÇÖs
 *    not make the image fluid.
 */
.gm-style img,
img[width],
img[height] {
  /* [2] */
  max-width: none;
}

/* [6] */
/* ==========================================================================
   LIST
   ========================================================================== */
/**
 * Remove extra vertical spacing when nesting lists.
 */
li > ul,
li > ol {
  margin-bottom: 0;
}

/* [7] */
/* ==========================================================================
   HR
   ========================================================================== */
hr {
  border: solid #ccc;
  border-width: 1px 0 0;
  margin: 1.5rem 0 1.4375rem;
  clear: both;
  height: 0;
}

/* [8] */
/* ==========================================================================
   BLOCKQUOTE
   ========================================================================== */
blockquote footer, blockquote small {
  display: block;
  font-size: 0.75rem;
  line-height: 2;
  color: #848484;
}
blockquote footer:before, blockquote small:before {
  content: '\2014 \00A0';
}

.blockquote {
  border-left: 0.375rem solid #e0e0e0;
  padding-left: 1.5rem;
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
}

.blockquote__header {
  color: #777;
  margin-bottom: 0.75rem;
}

.blockquote__body {
  font-family: Georgia, Cambria, "Times New Roman", Times, serif;
  color: #999;
}

.blockquote__footer {
  font-size: 85%;
  color: #777;
}

/* [9] */
/* ==========================================================================
   FORM ELEMENTS
   ========================================================================== */
fieldset {
  padding: 1.5rem;
}

input,
label,
select {
  display: block;
}

label {
  margin-bottom: 0.375rem;
}
label.required:after {
  content: "*";
}
label abbr {
  display: none;
}

textarea,
input[type="email"],
input[type="number"],
input[type="password"],
input[type="search"],
input[type="tel"],
input[type="text"],
input[type="url"],
input[type="color"],
input[type="date"],
input[type="datetime"],
input[type="datetime-local"],
input[type="month"],
input[type="time"],
input[type="week"],
select {
  box-sizing: border-box;
  width: 100%;
  margin-bottom: 0.75rem;
  padding: 0.75rem;
  border: 1px solid #ddd;
}

textarea {
  resize: vertical;
  height: 6rem;
}

input[type="checkbox"],
input[type="radio"] {
  display: inline;
  position: relative;
  top: 2px;
}

input[type="file"] {
  margin-bottom: 0.75rem;
  padding-bottom: 0.75rem;
  width: 100%;
}

/* [10] */
/*
   Modules
   ========================================================================== */
/**
 * modules, abstractions, and design patterns
 * (e.g. .media {}, .button{}, .list{}).
 *
 * [1]  Grids
 * [2]  Block
 * [3]  Box
 * [4]  Buttons
 * [5]  Flag
 * [6]  List Block
 * [7]  List Dull
 * [8]  List Inline
 * [9]  List UI
 * [10] Media
 * [11] Pack
 * [12] Table
 * [13] Tabs
 */
/* [1] */
/*
   Default grid classess
   ========================================================================== */
/*
   Grid unit modifier
   ========================================================================== */
/* ==========================================================================
   GRIDS
   ========================================================================== */
/**
 * Fully customizable and responsive CSS grids.
 *
 * Here we set a variable assuming that default and module settings
 * are not set globally. If they have been previously been defined,
 * the following variable will be overriden and will be set to `true`.
 */
/*
   Grids settings.
   ========================================================================== */
/**
 * We use these as default total columns throughout the framework.
 */
/*
   Default grid classess
   ========================================================================== */
/*
   Grid unit modifier
   ========================================================================== */
/*
   Default Grid Classes
   ========================================================================== */
.layout {
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  margin-top: 0;
  margin-bottom: 0;
  max-width: 62.5rem;
}
.layout .layout {
  width: auto;
  margin-left: -0.75rem;
  margin-right: -0.75rem;
  margin-top: 0;
  margin-bottom: 0;
  max-width: none;
}

.layout__unit {
  position: relative;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  float: left;
}

.layout__unit + .layout__unit:last-child {
  float: right;
}

.layout__unit + .layout__unit.end {
  float: left;
}

@media only screen {
  .small-1 {
    width: 100%;
  }

  .small-1-2 {
    width: 50%;
  }

  .layout__unit.small-centered {
    margin-left: auto;
    margin-right: auto;
    float: none;
  }

  .layout__unit.small-centered:last-child {
    float: none;
  }

  .small-1-3 {
    width: 33.33333%;
  }

  .small-2-3 {
    width: 66.66667%;
  }

  .layout__unit.small-centered {
    margin-left: auto;
    margin-right: auto;
    float: none;
  }

  .layout__unit.small-centered:last-child {
    float: none;
  }

  .small-1-4 {
    width: 25%;
  }

  .small-3-4 {
    width: 75%;
  }

  .layout__unit.small-centered {
    margin-left: auto;
    margin-right: auto;
    float: none;
  }

  .layout__unit.small-centered:last-child {
    float: none;
  }

  .small-1-5 {
    width: 20%;
  }

  .small-2-5 {
    width: 40%;
  }

  .small-3-5 {
    width: 60%;
  }

  .small-4-5 {
    width: 80%;
  }

  .layout__unit.small-centered {
    margin-left: auto;
    margin-right: auto;
    float: none;
  }

  .layout__unit.small-centered:last-child {
    float: none;
  }
}
@media only screen and (min-width: 45.063em) {
  .medium-1 {
    width: 100%;
  }

  .medium-1-2 {
    width: 50%;
  }

  .layout__unit.medium-centered {
    margin-left: auto;
    margin-right: auto;
    float: none;
  }

  .layout__unit.medium-centered:last-child {
    float: none;
  }

  .medium-1-3 {
    width: 33.33333%;
  }

  .medium-2-3 {
    width: 66.66667%;
  }

  .layout__unit.medium-centered {
    margin-left: auto;
    margin-right: auto;
    float: none;
  }

  .layout__unit.medium-centered:last-child {
    float: none;
  }

  .medium-1-4 {
    width: 25%;
  }

  .medium-3-4 {
    width: 75%;
  }

  .layout__unit.medium-centered {
    margin-left: auto;
    margin-right: auto;
    float: none;
  }

  .layout__unit.medium-centered:last-child {
    float: none;
  }

  .medium-1-5 {
    width: 20%;
  }

  .medium-2-5 {
    width: 40%;
  }

  .medium-3-5 {
    width: 60%;
  }

  .medium-4-5 {
    width: 80%;
  }

  .layout__unit.medium-centered {
    margin-left: auto;
    margin-right: auto;
    float: none;
  }

  .layout__unit.medium-centered:last-child {
    float: none;
  }
}
@media only screen and (min-width: 64.063em) {
  .large-1 {
    width: 100%;
  }

  .large-1-2 {
    width: 50%;
  }

  .layout__unit.large-centered {
    margin-left: auto;
    margin-right: auto;
    float: none;
  }

  .layout__unit.large-centered:last-child {
    float: none;
  }

  .large-1-3 {
    width: 33.33333%;
  }

  .large-2-3 {
    width: 66.66667%;
  }

  .layout__unit.large-centered {
    margin-left: auto;
    margin-right: auto;
    float: none;
  }

  .layout__unit.large-centered:last-child {
    float: none;
  }

  .large-1-4 {
    width: 25%;
  }

  .large-3-4 {
    width: 75%;
  }

  .layout__unit.large-centered {
    margin-left: auto;
    margin-right: auto;
    float: none;
  }

  .layout__unit.large-centered:last-child {
    float: none;
  }

  .large-1-5 {
    width: 20%;
  }

  .large-2-5 {
    width: 40%;
  }

  .large-3-5 {
    width: 60%;
  }

  .large-4-5 {
    width: 80%;
  }

  .layout__unit.large-centered {
    margin-left: auto;
    margin-right: auto;
    float: none;
  }

  .layout__unit.large-centered:last-child {
    float: none;
  }
}
/* [2] */
/* [3] */
/* [4] */
/* ==========================================================================
   BUTTONS
   ========================================================================== */
/**
 * A simple button object.
 */
/**
 * Here we set a variable assuming that `box-sizing: border-box;` is not
 * set globally. If it has been previously been defined,
 * the following variable will be overriden and will be set to `true`.
 */
/**
 * 1. Allow us to style box model properties.
 * 2. Line different sized buttons up a little nicer.
 * 3. Make buttons inherit font styles (often necessary when styling `input`s as
 *    buttons).
 * 4. Reset/normalize some styles.
 * 5. Force all button-styled elements to appear clickable.
 * 6. Subtract the border size from the padding value so that buttons do not
 *    grow larger as we add borders.
 */
.btn {
  display: inline-block;
  /* [1] */
  vertical-align: middle;
  /* [2] */
  font: inherit;
  /* [3] */
  text-align: center;
  /* [4] */
  border: none;
  /* [4] */
  margin: 0;
  /* [4] */
  cursor: pointer;
  /* [5] */
  padding: 0.6875rem 1.4375rem;
  /* [6] */
  background-color: #446cb3;
  border-width: 1px;
  border-style: solid;
  border-color: #446cb3;
  border-radius: 3px;
  transition: background-color 0.3s ease-out 0s;
}
.btn, .btn:hover, .btn:active, .btn:focus {
  text-decoration: none;
  /* [4] */
  color: #f9f9f9;
}
.btn:hover, .btn:focus {
  background-color: #5d81c1;
}
.btn:active {
  background-color: #3a5c98;
}

/**
 * Fix a Firefox bug whereby `input type="submit"` gains 2px extra padding.
 */
.btn::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Large buttons.
 */
.btn--large {
  padding: 1.4375rem 2.9375rem;
  /* [7] */
}

/**
 * Full-width buttons.
 */
.btn--full {
  width: 100%;
}

.btn--muse {
  background-color: #f30b65;
  border-color: #DB0A5B;
  transition: background-color 0.3s ease-out 0s;
}
.btn--muse:hover, .btn--muse:focus {
  background-color: #f63b84;
}
.btn--muse:active {
  background-color: #92073d;
}

.btn--cominter {
  background-color: #03e2be;
  border-color: #03C9A9;
  transition: background-color 0.3s ease-out 0s;
}
.btn--cominter:hover, .btn--cominter:focus {
  background-color: #1dfcd8;
}
.btn--cominter:active {
  background-color: #027e6a;
}

.btn--anona {
  background-color: #b9c3c3;
  border-color: #ABB7B7;
  transition: background-color 0.3s ease-out 0s;
}
.btn--anona:hover, .btn--anona:focus {
  background-color: #d4dada;
}
.btn--anona:active {
  background-color: #829494;
}

.btn--qualixen {
  background-color: #354b60;
  border-color: #2c3e50;
  transition: background-color 0.3s ease-out 0s;
}
.btn--qualixen:hover, .btn--qualixen:focus {
  background-color: #476481;
}
.btn--qualixen:active {
  background-color: #11181f;
}

.btn--large {
  font-size: 1.25rem;
}

/* [5] */
/* [6] */
/* [7] */
/* [8] */
/* ==========================================================================
   LIST-INLINE
   ========================================================================== */
/**
 * The list-inline object simply displays a list of items in one line.
 */
.list-inline {
  margin: 0;
  padding: 0;
  list-style: none;
}
.list-inline > li {
  display: inline-block;
}

/* [9] */
/* [10] */
/* [11] */
/* [12] */
/* [13] */
/*
   COMPONENTS
   ========================================================================== */
/**
 * Discrete, complete chunks of UI (e.g. .carousel {}, .topbar{}).
 * This is the one layer that the framework doesn't get involved with.
 * So, import your own components here and do your magic!
 *
 * @import "components.mycomponents1";
 * @import "components.mycomponents2";
 */
.animated {
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
  -webkit-animation-timing-function: ease-out;
  /* Chrome, Safari, Opera */
  animation-timing-function: ease-out;
}
.animated.infinite {
  -webkit-animation-iteration-count: infinite;
  animation-iteration-count: infinite;
}
.animated.delay-1s {
  -webkit-animation-delay: 1s;
  /* Chrome, Safari, Opera */
  animation-delay: 1s;
}
.animated.delay-2s {
  -webkit-animation-delay: 2s;
  /* Chrome, Safari, Opera */
  animation-delay: 2s;
}

@-webkit-keyframes bounceInDown {
  0% {
    -webkit-transform: translateY(0);
    transform: translateY(0);
  }
  10% {
    -webkit-transform: translateY(20px);
    transform: translateY(20px);
  }
  15% {
    -webkit-transform: translateY(-10px);
    transform: translateY(-10px);
  }
  20% {
    -webkit-transform: translateY(10px);
    transform: translateY(10px);
  }
  25% {
    -webkit-transform: translateY(0);
    transform: translateY(0);
  }
  100% {
    -webkit-transform: translateY(0);
    transform: translateY(0);
  }
}
@keyframes bounceInDown {
  0% {
    -webkit-transform: translateY(0);
    transform: translateY(0);
  }
  10% {
    -webkit-transform: translateY(20px);
    transform: translateY(20px);
  }
  15% {
    -webkit-transform: translateY(-10px);
    transform: translateY(-10px);
  }
  20% {
    -webkit-transform: translateY(10px);
    transform: translateY(10px);
  }
  25% {
    -webkit-transform: translateY(0);
    transform: translateY(0);
  }
  100% {
    -webkit-transform: translateY(0);
    transform: translateY(0);
  }
}
.bounceInDown {
  -webkit-animation-name: bounceInDown;
  animation-name: bounceInDown;
  -webkit-animation-duration: 2.5s;
  animation-duration: 2.5s;
  -webkit-animation-delay: 0.5s;
  animation-delay: 0.5s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
  -webkit-animation-iteration-count: 2;
  animation-iteration-count: 2;
}

@-webkit-keyframes fadeInUp {
  0% {
    opacity: 0;
    -webkit-transform: translateY(20px);
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
    transform: translateY(0);
  }
}
@keyframes fadeInUp {
  0% {
    opacity: 0;
    -webkit-transform: translateY(20px);
    -ms-transform: translateY(20px);
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
    -ms-transform: translateY(0);
    transform: translateY(0);
  }
}
.fadeInUp {
  -webkit-animation-name: fadeInUp;
  animation-name: fadeInUp;
}

@-webkit-keyframes fadeInRight {
  0% {
    opacity: 0;
    -webkit-transform: translateX(200px);
    transform: translateX(200px);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateX(0);
    transform: translateX(0);
  }
}
@keyframes fadeInRight {
  0% {
    opacity: 0;
    -webkit-transform: translateX(100px);
    -ms-transform: translateX(100px);
    transform: translateX(100px);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateX(0);
    -ms-transform: translateX(0);
    transform: translateX(0);
  }
}
.fadeInRight {
  -webkit-animation-name: fadeInRight;
  animation-name: fadeInRight;
}

@-webkit-keyframes fadeInLeft {
  0% {
    opacity: 0;
    -webkit-transform: translateX(-100px);
    transform: translateX(-100px);
  }
  90% {
    opacity: 1;
  }
  100% {
    -webkit-transform: translateX(0);
    transform: translateX(0);
  }
}
@keyframes fadeInLeft {
  0% {
    opacity: 0;
    -webkit-transform: translateX(-100px);
    transform: translateX(-100px);
  }
  90% {
    opacity: 1;
  }
  100% {
    -webkit-transform: translateX(0);
    -ms-transform: translateX(0);
    transform: translateX(0);
  }
}
.fadeInLeft {
  -webkit-animation-name: fadeInLeft;
  animation-name: fadeInLeft;
}

.badge {
  display: inline-block;
  padding: 0.375rem;
  margin-bottom: 0.375rem;
  border: 1px solid #f9f9f9;
  border-radius: 3px;
  line-height: 1;
}

/**
*
* Spam filter
*
**/
.first-name {
  display: none !important;
  visibility: hidden !important;
  margin: 0 !important;
}

.feedback {
  margin-top: 12px;
  color: #03C9A9;
  font-weight: bold;
}
.feedback.error {
  color: #DB0A5B;
}

@font-face {
  font-family: 'icon';
  src: url("../fonts/icon/icon.eot?u081di");
  src: url("../fonts/icon/icon.eot?#iefixu081di") format("embedded-opentype"), url("../fonts/icon/icon.woff?u081di") format("woff"), url("../fonts/icon/icon.ttf?u081di") format("truetype"), url("../fonts/icon/icon.svg?u081di#icon") format("svg");
  font-weight: normal;
  font-style: normal;
}
.icon {
  font-family: 'icon';
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.icon--linkedin:before {
  content: "\e600";
}

.icon--paperplane:before {
  content: "\e601";
}

.icon--arrow-down:before {
  content: "\e602";
}

.icon--heart:before {
  content: "\e603";
}

.icon--home:before {
  content: "\e604";
}

.icon--twitter:before {
  content: "\e60b";
}

.icon--facebook:before {
  content: "\e60c";
}

.icon--googleplus:before {
  content: "\e60d";
}

/* ==========================================================================
   LAYOUTS MODULE
   ========================================================================== */
/*
   BASE
   ========================================================================== */
html, body {
  height: 100%;
}

/*
   HEADER
   ========================================================================== */
.layout-header {
  display: table;
  height: 100%;
  width: 100%;
  background-color: #446CB3;
  color: #f9f9f9;
}
.layout-header .headline {
  line-height: 1.2;
}
@media only screen and (min-width: 64.063em) {
  .layout-header .headline {
    font-size: 2.61792rem;
  }
}

.layout__intro {
  display: table-cell;
  table-layout: fixed;
  vertical-align: middle;
}

.learn-more {
  display: block;
  width: 100%;
  position: absolute;
  left: 0;
  bottom: 24px;
}
.learn-more, .learn-more:hover {
  color: #f9f9f9;
}

/*
   FOOTER
   ========================================================================== */
.layout-footer {
  font-size: 0.875rem;
  padding: 24px;
  color: #f9f9f9;
}

.portfolio {
  max-width: 100%;
  overflow: hidden;
  margin-bottom: 6.25rem;
}
.portfolio:last-child {
  margin-bottom: 0;
}

.portfolio__desc {
  color: #f5f5f5;
  background-color: #f6f9fa;
}

.portfolio--qualixen .portfolio__desc {
  background-color: #2b3c4e;
}

.portfolio--anona .portfolio__desc {
  background-color: #a6b3b3;
}

.portfolio--cominter .portfolio__desc {
  background-color: #03c4a5;
}

.portfolio--muse .portfolio__desc {
  background-color: #d60a59;
}

/*
   HELPERS
   ========================================================================== */
/**
 * High-specificity, very explicit selectors.
 * Overrides and helper classes (e.g. .hidden {}).
 *
 * [1] Alignment
 * [1+] Alignment Responsive
 * [2] Spacing
 * [2+] Spacing Responsive
 * [3+] Visibility Responsive
 * [4] Text transform
 * [5] Float
 * [6] Clearfix
 * [7] Print
 */
/* [1] */
/* ==========================================================================
   Text Alignment
   ========================================================================== */
.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.text-justify {
  text-align: justify;
}

/* ==========================================================================
   Responsive Text Alignment
   ========================================================================== */
@media only screen and (max-width: 45em) {
  .small-only-text-left {
    text-align: left !important;
  }

  .small-only-text-right {
    text-align: right !important;
  }

  .small-only-text-center {
    text-align: center !important;
  }

  .small-only-text-justify {
    text-align: justify !important;
  }
}
@media only screen {
  .small-text-left {
    text-align: left !important;
  }

  .small-text-right {
    text-align: right !important;
  }

  .small-text-center {
    text-align: center !important;
  }

  .small-text-justify {
    text-align: justify !important;
  }
}
@media only screen and (min-width: 45.063em) and (max-width: 64em) {
  .medium-only-text-left {
    text-align: left !important;
  }

  .medium-only-text-right {
    text-align: right !important;
  }

  .medium-only-text-center {
    text-align: center !important;
  }

  .medium-only-text-justify {
    text-align: justify !important;
  }
}
@media only screen and (min-width: 45.063em) {
  .medium-text-left {
    text-align: left !important;
  }

  .medium-text-right {
    text-align: right !important;
  }

  .medium-text-center {
    text-align: center !important;
  }

  .medium-text-justify {
    text-align: justify !important;
  }
}
@media only screen and (min-width: 64.063em) and (max-width: 90em) {
  .large-only-text-left {
    text-align: left !important;
  }

  .large-only-text-right {
    text-align: right !important;
  }

  .large-only-text-center {
    text-align: center !important;
  }

  .large-only-text-justify {
    text-align: justify !important;
  }
}
@media only screen and (min-width: 64.063em) {
  .large-text-left {
    text-align: left !important;
  }

  .large-text-right {
    text-align: right !important;
  }

  .large-text-center {
    text-align: center !important;
  }

  .large-text-justify {
    text-align: justify !important;
  }
}
/* [2] */
/* ==========================================================================
   SPACING
   ========================================================================== */
/**
 * Margin and padding helper classes. Use these to tweak layout on a micro
 * level.
 *
 * `.(m|p)(t|r|b|l|h|v)(-|+|0) {}` = margin/padding top/right/bottom/left/horizontal/vertical less/more/none
 */
/**
 * Margin helper classes.
 *
 * Add margins.
 */
.m {
  margin: 1.5rem !important;
}

.mt {
  margin-top: 1.5rem !important;
}

.mr {
  margin-right: 1.5rem !important;
}

.mb {
  margin-bottom: 1.5rem !important;
}

.ml {
  margin-left: 1.5rem !important;
}

.mh {
  margin-right: 1.5rem !important;
  margin-left: 1.5rem !important;
}

.mv {
  margin-top: 1.5rem !important;
  margin-bottom: 1.5rem !important;
}

/**
 * Add tiny margins.
 */
.m-- {
  margin: 0.375rem !important;
}

.mt-- {
  margin-top: 0.375rem !important;
}

.mr-- {
  margin-right: 0.375rem !important;
}

.mb-- {
  margin-bottom: 0.375rem !important;
}

.ml-- {
  margin-left: 0.375rem !important;
}

.mh-- {
  margin-right: 0.375rem !important;
  margin-left: 0.375rem !important;
}

.mv-- {
  margin-top: 0.375rem !important;
  margin-bottom: 0.375rem !important;
}

/**
 * Add small margins.
 */
.m- {
  margin: 0.75rem !important;
}

.mt- {
  margin-top: 0.75rem !important;
}

.mr- {
  margin-right: 0.75rem !important;
}

.mb- {
  margin-bottom: 0.75rem !important;
}

.ml- {
  margin-left: 0.75rem !important;
}

.mh- {
  margin-right: 0.75rem !important;
  margin-left: 0.75rem !important;
}

.mv- {
  margin-top: 0.75rem !important;
  margin-bottom: 0.75rem !important;
}

/**
 * Add large margins.
 */
.m\+ {
  margin: 3rem !important;
}

.mt\+ {
  margin-top: 3rem !important;
}

.mr\+ {
  margin-right: 3rem !important;
}

.mb\+ {
  margin-bottom: 3rem !important;
}

.ml\+ {
  margin-left: 3rem !important;
}

.mh\+ {
  margin-right: 3rem !important;
  margin-left: 3rem !important;
}

.mv\+ {
  margin-top: 3rem !important;
  margin-bottom: 3rem !important;
}

/**
 * Add huge margins.
 */
.m\+\+ {
  margin: 6rem !important;
}

.mt\+\+ {
  margin-top: 6rem !important;
}

.mr\+\+ {
  margin-right: 6rem !important;
}

.mb\+\+ {
  margin-bottom: 6rem !important;
}

.ml\+\+ {
  margin-left: 6rem !important;
}

.mh\+\+ {
  margin-right: 6rem !important;
  margin-left: 6rem !important;
}

.mv\+\+ {
  margin-top: 6rem !important;
  margin-bottom: 6rem !important;
}

/**
 * Remove margins.
 */
.m0 {
  margin: 0 !important;
}

.mt0 {
  margin-top: 0 !important;
}

.mr0 {
  margin-right: 0 !important;
}

.mb0 {
  margin-bottom: 0 !important;
}

.ml0 {
  margin-left: 0 !important;
}

.mh0 {
  margin-right: 0 !important;
  margin-left: 0 !important;
}

.mv0 {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}

/**
 * Padding helper classes.
 *
 * Add paddings.
 */
.p {
  padding: 1.5rem !important;
}

.pt {
  padding-top: 1.5rem !important;
}

.pr {
  padding-right: 1.5rem !important;
}

.pb {
  padding-bottom: 1.5rem !important;
}

.pl {
  padding-left: 1.5rem !important;
}

.ph {
  padding-right: 1.5rem !important;
  padding-left: 1.5rem !important;
}

.pv {
  padding-top: 1.5rem !important;
  padding-bottom: 1.5rem !important;
}

/**
 * Add tiny paddings.
 */
.p-- {
  padding: 0.375rem !important;
}

.pt-- {
  padding-top: 0.375rem !important;
}

.pr-- {
  padding-right: 0.375rem !important;
}

.pb-- {
  padding-bottom: 0.375rem !important;
}

.pl-- {
  padding-left: 0.375rem !important;
}

.ph-- {
  padding-right: 0.375rem !important;
  padding-left: 0.375rem !important;
}

.pv-- {
  padding-top: 0.375rem !important;
  padding-bottom: 0.375rem !important;
}

/**
 * Add small paddings.
 */
.p- {
  padding: 0.75rem !important;
}

.pt- {
  padding-top: 0.75rem !important;
}

.pr- {
  padding-right: 0.75rem !important;
}

.pb- {
  padding-bottom: 0.75rem !important;
}

.pl- {
  padding-left: 0.75rem !important;
}

.ph- {
  padding-right: 0.75rem !important;
  padding-left: 0.75rem !important;
}

.pv- {
  padding-top: 0.75rem !important;
  padding-bottom: 0.75rem !important;
}

/**
 * Add large paddings.
 */
.p\+ {
  padding: 3rem !important;
}

.pt\+ {
  padding-top: 3rem !important;
}

.pr\+ {
  padding-right: 3rem !important;
}

.pb\+ {
  padding-bottom: 3rem !important;
}

.pl\+ {
  padding-left: 3rem !important;
}

.ph\+ {
  padding-right: 3rem !important;
  padding-left: 3rem !important;
}

.pv\+ {
  padding-top: 3rem !important;
  padding-bottom: 3rem !important;
}

/**
 * Add huge paddings.
 */
.p\+\+ {
  padding: 6rem !important;
}

.pt\+\+ {
  padding-top: 6rem !important;
}

.pr\+\+ {
  padding-right: 6rem !important;
}

.pb\+\+ {
  padding-bottom: 6rem !important;
}

.pl\+\+ {
  padding-left: 6rem !important;
}

.ph\+\+ {
  padding-right: 6rem !important;
  padding-left: 6rem !important;
}

.pv\+\+ {
  padding-top: 6rem !important;
  padding-bottom: 6rem !important;
}

/* ==========================================================================
   Responsive Spacing Classes
   ========================================================================== */
/**
 * Margin and padding helper classes. Use these to tweak layout on a micro
 * level.
 *
 * `.(m|p)(t|r|b|l|h|v)(-|+|0) {}` = margin/padding top/right/bottom/left/horizontal/vertical less/more/none
 */
@media only screen {
  /**
   * Margin helper classes.
   *
   * Add margins.
   */
  .small-m {
    margin: 1.5rem !important;
  }

  .small-mt {
    margin-top: 1.5rem !important;
  }

  .small-mr {
    margin-right: 1.5rem !important;
  }

  .small-mb {
    margin-bottom: 1.5rem !important;
  }

  .small-ml {
    margin-left: 1.5rem !important;
  }

  .small-mh {
    margin-right: 1.5rem !important;
    margin-left: 1.5rem !important;
  }

  .small-mv {
    margin-top: 1.5rem !important;
    margin-bottom: 1.5rem !important;
  }

  /**
   * Remove margins.
   */
  .small-m0 {
    margin: 0 !important;
  }

  .small-mt0 {
    margin-top: 0 !important;
  }

  .small-mr0 {
    margin-right: 0 !important;
  }

  .small-mb0 {
    margin-bottom: 0 !important;
  }

  .small-ml0 {
    margin-left: 0 !important;
  }

  .small-mh0 {
    margin-right: 0 !important;
    margin-left: 0 !important;
  }

  .small-mv0 {
    margin-top: 0 !important;
    margin-bottom: 0 !important;
  }
}
@media only screen and (min-width: 45.063em) {
  /**
   * Margin helper classes.
   *
   * Add margins.
   */
  .medium-m {
    margin: 1.5rem !important;
  }

  .medium-mt {
    margin-top: 1.5rem !important;
  }

  .medium-mr {
    margin-right: 1.5rem !important;
  }

  .medium-mb {
    margin-bottom: 1.5rem !important;
  }

  .medium-ml {
    margin-left: 1.5rem !important;
  }

  .medium-mh {
    margin-right: 1.5rem !important;
    margin-left: 1.5rem !important;
  }

  .medium-mv {
    margin-top: 1.5rem !important;
    margin-bottom: 1.5rem !important;
  }

  /**
   * Remove margins.
   */
  .medium-m0 {
    margin: 0 !important;
  }

  .medium-mt0 {
    margin-top: 0 !important;
  }

  .medium-mr0 {
    margin-right: 0 !important;
  }

  .medium-mb0 {
    margin-bottom: 0 !important;
  }

  .medium-ml0 {
    margin-left: 0 !important;
  }

  .medium-mh0 {
    margin-right: 0 !important;
    margin-left: 0 !important;
  }

  .medium-mv0 {
    margin-top: 0 !important;
    margin-bottom: 0 !important;
  }
}
@media only screen and (min-width: 64.063em) {
  /**
   * Margin helper classes.
   *
   * Add margins.
   */
  .large-m {
    margin: 1.5rem !important;
  }

  .large-mt {
    margin-top: 1.5rem !important;
  }

  .large-mr {
    margin-right: 1.5rem !important;
  }

  .large-mb {
    margin-bottom: 1.5rem !important;
  }

  .large-ml {
    margin-left: 1.5rem !important;
  }

  .large-mh {
    margin-right: 1.5rem !important;
    margin-left: 1.5rem !important;
  }

  .large-mv {
    margin-top: 1.5rem !important;
    margin-bottom: 1.5rem !important;
  }

  /**
   * Remove margins.
   */
  .large-m0 {
    margin: 0 !important;
  }

  .large-mt0 {
    margin-top: 0 !important;
  }

  .large-mr0 {
    margin-right: 0 !important;
  }

  .large-mb0 {
    margin-bottom: 0 !important;
  }

  .large-ml0 {
    margin-left: 0 !important;
  }

  .large-mh0 {
    margin-right: 0 !important;
    margin-left: 0 !important;
  }

  .large-mv0 {
    margin-top: 0 !important;
    margin-bottom: 0 !important;
  }
}
/* [3] */
/* ==========================================================================
   Visibility Classes
   ========================================================================== */
.hide {
  display: none;
}

.show {
  display: inherit;
}

/* ==========================================================================
   Responsive Visibility Classes
   ========================================================================== */
/* small displays */
@media only screen {
  .show-for-small-only, .show-for-small-up, .hide-for-medium-only, .hide-for-medium-up, .hide-for-large-only, .hide-for-large-up {
    display: inherit !important;
  }

  .hide-for-small-only, .hide-for-small-up, .show-for-medium-only, .show-for-medium-up, .show-for-large-only, .show-for-large-up {
    display: none !important;
  }
}
/* medium displays */
@media only screen and (min-width: 45.063em) {
  .hide-for-small-only, .show-for-small-up, .show-for-medium-only, .show-for-medium-up, .hide-for-large-only, .hide-for-large-up {
    display: inherit !important;
  }

  .show-for-small-only, .hide-for-small-up, .hide-for-medium-only, .hide-for-medium-up, .show-for-large-only, .show-for-large-up {
    display: none !important;
  }
}
/* large displays */
@media only screen and (min-width: 64.063em) {
  .hide-for-small-only, .show-for-small-up, .hide-for-medium-only, .show-for-medium-up, .show-for-large-only, .show-for-large-up {
    display: inherit !important;
  }

  .show-for-small-only, .hide-for-small-up, .show-for-medium-only, .hide-for-medium-up, .hide-for-large-only, .hide-for-large-up {
    display: none !important;
  }
}
/* [4] */
/* ==========================================================================
   Text Transform Helper Classes
   ========================================================================== */
.uppercase {
  text-transform: uppercase;
}

.lowercase {
  text-transform: lowercase;
}

.capitalize {
  text-transform: capitalize;
}

/* [5] */
/* [6] */
/* ==========================================================================
   CLEARFIX
   ========================================================================== */
/**
 * Micro clearfix, as per: css-101.org/articles/clearfix/latest-new-clearfix-so-far.php
 * Extend the clearfix class with Sass to avoid the `.clearfix` class appearing
 * over and over in your markup.
 */
.clearfix:before, .clearfix:after,
.layout:before,
.layout:after {
  content: " ";
  display: table;
}
.clearfix:after,
.layout:after {
  clear: both;
}

/* [7] */
/* ==========================================================================
   PRINT
   ========================================================================== */
/**
 * Very crude, reset-like styles taken from the HTML5 Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/3c3c5e64604209a4d63e1e4c48dd245d45fadfd9/css/main.css#L200-L234
 */
@media print {
  * {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster: h5bp.com/s */
    box-shadow: none !important;
    text-shadow: none !important;
  }

  a,
  a:visited {
    text-decoration: underline;
  }

  a[href]:after {
    content: " (" attr(href) ")";
  }

  abbr[title]:after {
    content: " (" attr(title) ")";
  }

  /**
   * DonΓÇÖt show links that are fragment identifiers, or use the `javascript:`
   * pseudo protocol.
   */
  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: "";
  }
}
.text-2x {
  font-size: 2rem;
}

.pos-rel,
.layout-header,
.portfolio__img {
  position: relative;
}

.oh {
  overflow: hidden;
}

.bg-primary,
.layout-footer {
  background-color: #446cb3;
}

.bg-grey {
  background-color: #f0f0f0;
}
